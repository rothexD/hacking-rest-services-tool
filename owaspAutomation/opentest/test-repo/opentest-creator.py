import string
from zapv2 import ZAPv2
import json
import time
from pprint import pprint
from zapv2 import ZAPv2

target = 'http://localhost:3000'
apikey = '8g0mshc4eva8ssubp291h59df7' 

zap = ZAPv2(apikey=apikey, proxies={'http': 'http://127.0.0.1:8090', 'https': 'http://127.0.0.1:8090'})
def zapScan():
    print('Accessing target {}'.format(target))
    zap.urlopen(target)
    # Give the sites tree a chance to get updated
    time.sleep(2)

    print('Spidering target {}'.format(target))
    scanid = zap.spider.scan(target)
    # Give the Spider a chance to start
    time.sleep(2)
    while (int(zap.spider.status(scanid)) < 100):
        # Loop until the spider has finished
        print('Spider progress %: {}'.format(zap.spider.status(scanid)))
        time.sleep(2)

    print ('Spider completed')

    while (int(zap.pscan.records_to_scan) > 0):
        print ('Records to passive scan : {}'.format(zap.pscan.records_to_scan))
        time.sleep(2)

    print ('Passive Scan completed')

    print ('Active Scanning target {}'.format(target))
    scanid = zap.ascan.scan(target)
    while (int(zap.ascan.status(scanid)) < 100):
        print ('Scan progress %: {}'.format(zap.ascan.status(scanid)))
        time.sleep(5)

    print ('Active Scan completed')
    return zap.core.alerts()

def openTestDescription(desc):
    values={'desc':desc}
    t=string.Template("""description: OWASP-ZAP Test for $desc 
actors:
  - actor: WEB
    segments:""")
    return t.substitute(values)
def openTestPages(id, pageurl):
    values={'id': id ,'pageurl':pageurl}
    t=string.Template("""
      - segment: $id
        actions:
          - description: Navigate to the Page $pageurl
            action: org.getopentest.selenium.NavigateTo
            args:
              url: $pageurl""")
    return t.substitute(values)
def parsingTests(zapResults,desc):
    urlList=[]
    i=1
    for obj in zapResults:
        if obj['name'] == desc:
            o={'url': obj['url']}
            urlList.append(o)
    f = open("tests/"+desc+".yaml","w+")
    f.write(openTestDescription(desc))
    for item in urlList:
        test=openTestPages(i,item['url'])
        f.write(test)
        i+=1
    f.close()
def main():
    parsingTests(zapScan(), 'Web Browser XSS Protection Not Enabled')
    
if __name__ == "__main__":
    main()