using Newtonsoft.Json;
using System;
using System.Collections.Generic;

namespace SpreadSheetLib.Entities
{
    /// <summary>
    /// Contains information about a user-specified table including its name,
    /// columns and collaborators (users allowed to edit the table).
    /// </summary>
    public class TableRef
    {
        /// <summary>
        /// A unique ID to identify the table.
        /// </summary>
        public Guid TableRefId { get; set; }

        /// <summary>
        /// An optional display name.
        /// </summary>
        public string DisplayName { get; set; }

        /// <summary>
        /// Whether this table is a data set or a spreadsheet.
        /// </summary>
        public TableType Type { get; set; }

        /// <summary>
        /// The table's name in the database.
        /// </summary>
        /// <remarks>
        /// The name is generated by using <see cref="Guid.ToString(string?)"/> mit the argument "N".
        /// </remarks>
        public Guid LookupName { get; set; }

        /// <summary>
        /// ID of the user that created this table.
        /// </summary>
        public Guid OwnerUserId { get; set; }

        /// <summary>
        /// The user that created this table.
        /// </summary>
        /// <remarks>
        /// This user may add/remove collaborators and change the table's <see cref="DisplayName"/>.
        /// </remarks>
        public User Owner { get; set; }

        /// <summary>
        /// Users that are allowed to edit this table's content.
        /// </summary>
        public ICollection<User> Collaborators { get; set; }

        /// <summary>
        /// The columns that this table consists of.
        /// This is ignored if <see cref="Type"/> is <see cref="TableType.Sheet"/>.
        /// </summary>
        public ICollection<DataSetColumn> Columns { get; set; }
    }

    /// <summary>
    /// Lists the different kinds of tables.
    /// </summary>
    public enum TableType
    {
        /// <summary>
        /// A table that is directly mapped to the database.
        /// </summary>
        DataSet,

        /// <summary>
        /// A spreadsheet table.
        /// </summary>
        Sheet
    }
}
